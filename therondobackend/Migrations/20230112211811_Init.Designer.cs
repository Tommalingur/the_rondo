// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using therondoAPI.Data;

#nullable disable

namespace therondoAPI.Migrations
{
    [DbContext(typeof(RondoDbContext))]
    [Migration("20230112211811_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("therondoAPI.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            FirstName = "Tómas",
                            LastName = "Gunnarsson",
                            Password = "RosaGottPW",
                            UserName = "TomDaBum"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeadLine")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ArticleId");

                    b.HasIndex("AdminId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            Content = "The Rondo is a new site with news and articles related to the beautiful game. It is now officially open for business. Be sure to check in daily for new content!",
                            CreatedDate = new DateTime(2023, 1, 12, 21, 18, 11, 250, DateTimeKind.Local).AddTicks(3685),
                            HeadLine = "The Rondo is in the air!"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("therondoAPI.Models.NewsPiece", b =>
                {
                    b.Property<int>("NewsPieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsPieceId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeadLine")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NewsPieceId");

                    b.HasIndex("AdminId");

                    b.ToTable("NewsPieces");

                    b.HasData(
                        new
                        {
                            NewsPieceId = 1,
                            Content = "Not only does The Rondo have articles about everything from tactics and football history to upcoming stars and opinions of our team of writers. We will also keep tabs of news from around the globe so you can get all your football content in one place!",
                            CreatedDate = new DateTime(2023, 1, 12, 21, 18, 11, 250, DateTimeKind.Local).AddTicks(3708),
                            HeadLine = "The Rondo also has news pieces"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Usain",
                            LastName = "Bolt",
                            Password = "Hlaupagikkur",
                            UserName = "2Fast"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.Article", b =>
                {
                    b.HasOne("therondoAPI.Models.Admin", null)
                        .WithMany("Articles")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("therondoAPI.Models.Comment", b =>
                {
                    b.HasOne("therondoAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("therondoAPI.Models.NewsPiece", b =>
                {
                    b.HasOne("therondoAPI.Models.Admin", null)
                        .WithMany("NewsPieces")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("therondoAPI.Models.Admin", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("NewsPieces");
                });
#pragma warning restore 612, 618
        }
    }
}
