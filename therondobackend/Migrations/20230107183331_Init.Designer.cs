// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using therondoAPI.Data;

#nullable disable

namespace therondoAPI.Migrations
{
    [DbContext(typeof(RondoDbContext))]
    [Migration("20230107183331_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("therondoAPI.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            FirstName = "Tómas",
                            LastName = "Gunnarsson",
                            Password = "SafePW",
                            UserName = "Tommi_Admin"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("ArticleImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeadLine")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ArticleId");

                    b.HasIndex("AdminId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            AdminId = 1,
                            ArticleImgUrl = "https://localhost:7199/images/Messi1.jpg",
                            Content = "Awesome article text 1",
                            CreatedDate = new DateTime(2023, 1, 7, 18, 33, 31, 576, DateTimeKind.Local).AddTicks(5878),
                            HeadLine = "Lionel Messi can only be stopped by 'prayer'"
                        },
                        new
                        {
                            ArticleId = 2,
                            AdminId = 1,
                            ArticleImgUrl = "https://localhost:7199/images/Lewandowski1.jpg",
                            Content = "Awesome article text 2",
                            CreatedDate = new DateTime(2023, 1, 7, 18, 33, 31, 576, DateTimeKind.Local).AddTicks(5880),
                            HeadLine = "How Barcelona could line up without Lewandowski"
                        },
                        new
                        {
                            ArticleId = 3,
                            AdminId = 1,
                            ArticleImgUrl = "https://localhost:7199/images/AtleticovsBarcelona.jpg",
                            Content = "Awesome article text 3",
                            CreatedDate = new DateTime(2023, 1, 7, 18, 33, 31, 576, DateTimeKind.Local).AddTicks(5881),
                            HeadLine = "Three talking points ahead of Atletico Madrid vs Barcelona"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("therondoAPI.Models.NewsPiece", b =>
                {
                    b.Property<int>("NewsPieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsPieceId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeadLine")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NewsPieceId");

                    b.HasIndex("AdminId");

                    b.ToTable("NewsPieces");

                    b.HasData(
                        new
                        {
                            NewsPieceId = 1,
                            AdminId = 1,
                            Content = "Awesome news text 1",
                            CreatedDate = new DateTime(2023, 1, 7, 18, 33, 31, 576, DateTimeKind.Local).AddTicks(5908),
                            HeadLine = "Awesome news 1"
                        },
                        new
                        {
                            NewsPieceId = 2,
                            AdminId = 1,
                            Content = "Awesome news text 2",
                            CreatedDate = new DateTime(2023, 1, 7, 18, 33, 31, 576, DateTimeKind.Local).AddTicks(5910),
                            HeadLine = "Awesome news 2"
                        },
                        new
                        {
                            NewsPieceId = 3,
                            AdminId = 1,
                            Content = "Awesome news text 3",
                            CreatedDate = new DateTime(2023, 1, 7, 18, 33, 31, 576, DateTimeKind.Local).AddTicks(5911),
                            HeadLine = "Awesome news 3"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "TheFirst",
                            LastName = "Avenger"
                        });
                });

            modelBuilder.Entity("therondoAPI.Models.Article", b =>
                {
                    b.HasOne("therondoAPI.Models.Admin", "Admin")
                        .WithMany("Articles")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("therondoAPI.Models.Comment", b =>
                {
                    b.HasOne("therondoAPI.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("therondoAPI.Models.NewsPiece", b =>
                {
                    b.HasOne("therondoAPI.Models.Admin", "Admin")
                        .WithMany("NewsPieces")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("therondoAPI.Models.Admin", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("NewsPieces");
                });

            modelBuilder.Entity("therondoAPI.Models.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
